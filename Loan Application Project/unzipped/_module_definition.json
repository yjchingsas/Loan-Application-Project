{"scope":"PUBLIC","source":"\n\n  DS2_OPTIONS LOGICALEXPR = STANDARD;\n  DS2_OPTIONS SCOND = WARNING;\n  DS2_OPTIONS MISSING_NOTE;\n\n                                                                                             \n                     \n  package \"Loan Application Project\"  / inline;\n    dcl package logger logr_perf('App.tk.SID.Perf');\n    dcl double timer_start;\n    dcl double elapsed_time;\n    dcl double total_timer_start;\n    dcl double total_elapsed_time;\n\n    dcl package \"Loanu32Applicationu32Project_CreditCheckAPI_2_0\" \"Loanu32Applicationu32Project_CreditCheckAPI_2_0_hdl\"();\n    dcl package \"Loanu32Applicationu32Project_Pythonu32LogisticRegressionu32withu32SASu32Transformu32u40Pipelineu321u41\" \"Loanu32Applicationu32Project_Pythonu32LogisticRegressionu32withu32SASu32Transformu32u40Pipelineu321u41_hdl\"();\n    dcl package \"Loanu32Applicationu32Project_highRiskModelScoreRule_1_0\" \"Loanu32Applicationu32Project_highRiskModelScoreRule_1_0_hdl\"();\n    dcl package \"Loanu32Applicationu32Project_loanToValueRule_1_0\" \"Loanu32Applicationu32Project_loanToValueRule_1_0_hdl\"();\n    dcl package \"Loanu32Applicationu32Project_lowRiskModelScoreRule_1_0\" \"Loanu32Applicationu32Project_lowRiskModelScoreRule_1_0_hdl\"();\n\n     method init();\n\n     end;\n\n    method execute_internal(\n       in_out double \"CredLineAge\"\n      ,in_out double \"CredLines\"\n      ,in_out varchar \"CustomerID\"\n      ,in_out double \"DebtIncRatio\"\n      ,in_out double \"Delinquencies\"\n      ,in_out double \"DerogatoryMarks\"\n      ,in_out double \"HomeValue\"\n      ,in_out double \"Income\"\n      ,in_out double \"Inquiries\"\n      ,in_out varchar \"JobType\"\n      ,in_out double \"LoanRequest\"\n      ,in_out double \"LoanToValue\"\n      ,in_out double \"YearsOnJob\"\n      ,in_out varchar \"I_Default\"\n      ,in_out double \"P_Default0\"\n      ,in_out double \"P_Default1\"\n      ,in_out varchar \"Status\"\n\n      ,in_out integer \"_filter_\"\n\n    );\n        dcl integer dg_filter_;\n\n       dcl integer _masRC;\n\n        total_timer_start = datetime();\n\n\"I_Default\" = 'undefined';\n\"Status\" = 'undefined';\n\n        timer_start = datetime();\n        \"Loanu32Applicationu32Project_loanToValueRule_1_0_hdl\".execute(\"LoanToValue\", \"Status\");\n        elapsed_time = datetime() - timer_start;\n        logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", Node Name: loanToValueRule, Node ID: a0840837-2bef-4d64-b0cd-2bd8a9f63b85, NODE DURATION: ' .. elapsed_time);\n\n        if ( Status= 'Declined' ) then do;\n\n        end;\n        else do;\n\n             timer_start = datetime();\n             \"Loanu32Applicationu32Project_CreditCheckAPI_2_0_hdl\".execute(\"CustomerID\", \"CredLineAge\", \"CredLines\", \"DebtIncRatio\", \"Delinquencies\", \"DerogatoryMarks\", \"Inquiries\");\n             elapsed_time = datetime() - timer_start;\n             logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", Node Name: CreditCheckAPI, Node ID: e5668507-552b-4863-8c8d-369347c7d172, NODE DURATION: ' .. elapsed_time);\n\n             timer_start = datetime();\n             \"Loanu32Applicationu32Project_Pythonu32LogisticRegressionu32withu32SASu32Transformu32u40Pipelineu321u41_hdl\".score(\"CredLineAge\", \"CredLines\", \"DebtIncRatio\", \"Delinquencies\", \"DerogatoryMarks\", \"HomeValue\", \"Income\", \"Inquiries\", \"JobType\", \"LoanRequest\", \"LoanToValue\", \"YearsOnJob\", \"resultCode\", \"P_Default0\", \"P_Default1\", \"I_Default\");\n             elapsed_time = datetime() - timer_start;\n             logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", Node Name: Python LogisticRegression with SAS Transform (Pipeline 1), Node ID: c5690855-8387-4c12-aab8-7b91fd0d2e7f, NODE DURATION: ' .. elapsed_time);\n\n              ;\n\n             if ( YearsOnJob\u003c 1 ) then do;\n\n                  timer_start = datetime();\n                  \"Loanu32Applicationu32Project_highRiskModelScoreRule_1_0_hdl\".execute(\"P_Default1\", \"Status\");\n                  elapsed_time = datetime() - timer_start;\n                  logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", Node Name: highRiskModelScoreRule, Node ID: fdb53d39-2ef8-4669-9eff-8c144c5c0442, NODE DURATION: ' .. elapsed_time);\n\n             end;\n             else do;\n\n                  timer_start = datetime();\n                  \"Loanu32Applicationu32Project_lowRiskModelScoreRule_1_0_hdl\".execute(\"P_Default1\", \"Status\");\n                  elapsed_time = datetime() - timer_start;\n                  logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", Node Name: lowRiskModelScoreRule, Node ID: 3fc77e36-e2ff-4b06-b6b1-4f144b16246d, NODE DURATION: ' .. elapsed_time);\n\n             end;\n\n        end;\n\n        \"end\":                                            \n\n        total_elapsed_time = datetime() - total_timer_start;\n        logr_perf.log( 'd', 'Package Name: \"Loan Application Project\", TOTAL DURATION: ' .. total_elapsed_time);\n\n     end;\n\n    method execute(\n       double \"CredLineAge_\"\n      ,double \"CredLines_\"\n      ,varchar(6) \"CustomerID_\"\n      ,double \"DebtIncRatio_\"\n      ,double \"Delinquencies_\"\n      ,double \"DerogatoryMarks_\"\n      ,double \"HomeValue_\"\n      ,double \"Income_\"\n      ,double \"Inquiries_\"\n      ,varchar(7) \"JobType_\"\n      ,double \"LoanRequest_\"\n      ,double \"LoanToValue_\"\n      ,double \"YearsOnJob_\"\n      ,in_out double \"CredLineAge\"\n      ,in_out double \"CredLines\"\n      ,in_out varchar \"CustomerID\"\n      ,in_out double \"DebtIncRatio\"\n      ,in_out double \"Delinquencies\"\n      ,in_out double \"DerogatoryMarks\"\n      ,in_out double \"HomeValue\"\n      ,in_out varchar \"I_Default\"\n      ,in_out double \"Income\"\n      ,in_out double \"Inquiries\"\n      ,in_out varchar \"JobType\"\n      ,in_out double \"LoanRequest\"\n      ,in_out double \"LoanToValue\"\n      ,in_out double \"P_Default0\"\n      ,in_out double \"P_Default1\"\n      ,in_out varchar \"Status\"\n      ,in_out double \"YearsOnJob\"\n);\n\n      dcl integer _filter_;\n\n          \"CredLineAge\" = \"CredLineAge_\";\n      \"CredLines\" = \"CredLines_\";\n      \"CustomerID\" = \"CustomerID_\";\n      \"DebtIncRatio\" = \"DebtIncRatio_\";\n      \"Delinquencies\" = \"Delinquencies_\";\n      \"DerogatoryMarks\" = \"DerogatoryMarks_\";\n      \"HomeValue\" = \"HomeValue_\";\n      \"Income\" = \"Income_\";\n      \"Inquiries\" = \"Inquiries_\";\n      \"JobType\" = \"JobType_\";\n      \"LoanRequest\" = \"LoanRequest_\";\n      \"LoanToValue\" = \"LoanToValue_\";\n      \"YearsOnJob\" = \"YearsOnJob_\";\n\n          execute_internal(\n          \"CredLineAge\"\n         ,\"CredLines\"\n         ,\"CustomerID\"\n         ,\"DebtIncRatio\"\n         ,\"Delinquencies\"\n         ,\"DerogatoryMarks\"\n         ,\"HomeValue\"\n         ,\"Income\"\n         ,\"Inquiries\"\n         ,\"JobType\"\n         ,\"LoanRequest\"\n         ,\"LoanToValue\"\n         ,\"YearsOnJob\"\n         ,\"I_Default\"\n         ,\"P_Default0\"\n         ,\"P_Default1\"\n         ,\"Status\"\n      ,\"_filter_\"\n      );\n\n    end;\n\n                       \n       endpackage;","properties":[{"name":"sourceURI","value":"/decisions/flows/69825e91-8b52-4f7e-9bff-b46f1a89e0ba/revisions/3de0a4dc-80ea-4e16-9114-3bf8a5adae13"}],"submodules":[{"name":"Loanu32Applicationu32Project_CreditCheckAPI_2_0","description":"","source":"\n\nds2_options scond=WARNING;\n                                                                             \nds2_options sas;\n                                                                                                                                                                                                                                                                                                               \npackage \"Loanu32Applicationu32Project_CreditCheckAPI_2_0\" / inline;\n    dcl package pymas py;\n    dcl double pystop;\n    dcl package logger logr('App.tk.SID.Python');\n\n    method execute(\n         varchar(6) CustomerID\n        , in_out double CredLineAge\n        , in_out double CredLines\n        , in_out double DebtIncRatio\n        , in_out double Delinquencies\n        , in_out double DerogatoryMarks\n        , in_out double Inquiries\n    );\n\n      dcl nvarchar(10485760) pypgm;\n      dcl double rc;\n      dcl double revision;\n      if null(py) and pystop ^= 1 then do;\n        py = _new_ pymas();\n        if inmas() then do;\n            rc = py.useModule('\"Loanu32Applicationu32Project_CreditCheckAPI_2_0_-953064184\"', 1);\n        end;\n        else do;\n            rc = 1;\n        end;\n        if rc then do;\n          rc = py.appendSrcLine('');\n          rc = py.appendSrcLine(''''''' List all output parameters as comma-separated values in the \"Output:\" docString. Do not specify \"None\" if there is no output parameter. ''''''');\n          rc = py.appendSrcLine(''''''' List all Python packages that are not built-in packages in the \"DependentPackages:\" docString. Separate the package names with commas on a single line. ''''''');\n          rc = py.appendSrcLine(''''''' DependentPackages: requests''''''');\n          rc = py.appendSrcLine('');\n          rc = py.appendSrcLine('import json ');\n          rc = py.appendSrcLine('import requests ');\n          rc = py.appendSrcLine(' ');\n          rc = py.appendSrcLine('def execute (CustomerID):');\n          rc = py.appendSrcLine('    ''Output:CredLineAge,CredLines,DebtIncRatio,Delinquencies,DerogatoryMarks,Inquiries'' ');\n          rc = py.appendSrcLine('    ');\n          rc = py.appendSrcLine('    ## (CustomerID: str) -\u003e tuple');\n          rc = py.appendSrcLine('    CredLineAge: int');\n          rc = py.appendSrcLine('    CredLines: int');\n          rc = py.appendSrcLine('    DebtIncRatio: int');\n          rc = py.appendSrcLine('    Delinquencies: int');\n          rc = py.appendSrcLine('    DerogatoryMarks: int');\n          rc = py.appendSrcLine('    Inquiries: int');\n          rc = py.appendSrcLine('    ');\n          rc = py.appendSrcLine('    ## Create JSON payload with customer ID');\n          rc = py.appendSrcLine('    payload = { \"CustomerID\": CustomerID} ');\n          rc = py.appendSrcLine('    ## Perform call to external credit bureau API');\n          rc = py.appendSrcLine('    cred_check = requests.post( ');\n          rc = py.appendSrcLine('        url=''http://api.app.svc.cluster.local:5005/check'', ');\n          rc = py.appendSrcLine('        headers={''Content-Type'': ''application/json''}, ');\n          rc = py.appendSrcLine('        data = json.dumps(payload) ');\n          rc = py.appendSrcLine('    ) ');\n          rc = py.appendSrcLine('    CredLines = cred_check.json()[''CredLines''] ');\n          rc = py.appendSrcLine('    CredLineAge = cred_check.json()[''CredLineAge'']');\n          rc = py.appendSrcLine('    DebtIncRatio = cred_check.json()[''DebtIncRatio'']');\n          rc = py.appendSrcLine('    Delinquencies = cred_check.json()[''Delinquencies'']');\n          rc = py.appendSrcLine('    DerogatoryMarks = cred_check.json()[''DerogatoryMarks'']');\n          rc = py.appendSrcLine('    Inquiries = cred_check.json()[''Inquiries'']');\n          rc = py.appendSrcLine('#     CredLineAge = 101.4660019');\n          rc = py.appendSrcLine('#     CredLines = 8');\n          rc = py.appendSrcLine('#     DebtIncRatio = 1.804552228');\n          rc = py.appendSrcLine('#     Delinquencies = 0');\n          rc = py.appendSrcLine('#     DerogatoryMarks = 0');\n          rc = py.appendSrcLine('#     Inquiries = 1');\n          rc = py.appendSrcLine('    return CredLineAge,CredLines,DebtIncRatio,Delinquencies,DerogatoryMarks,Inquiries');\n          pypgm = py.getSource();\n          revision = py.publish(pypgm, '\"Loanu32Applicationu32Project_CreditCheckAPI_2_0_-953064184\"');\n          if revision \u003c 1 then do;\n            pystop = 1;\n            logr.log( 'e', 'publish revision=$s', revision );\n            return;\n          end;\n        end;\n        else do;\n          logr.log( 'd', 'useModule rc=$s', rc );\n        end;\n        rc = py.useMethod('execute');\n        if rc then do;\n          pystop = 1;\n          logr.log( 'e', 'useMethod rc=$s', rc );\n          return;\n        end;\n      end;\n      if pystop ^= 1 then do;\n        rc = py.setString ('CustomerID', CustomerID);\n        if rc then do;\n          logr.log( 'e', 'set CustomerID rc=$s', rc );\n          return;\n        end;\n        rc = py.execute();\n        if rc then do;\n           logr.log( 'd', 'execute rc=$s', rc );\n           return;\n        end;\n        CredLineAge = py.getDouble('CredLineAge');\n        CredLines = py.getDouble('CredLines');\n        DebtIncRatio = py.getDouble('DebtIncRatio');\n        Delinquencies = py.getDouble('Delinquencies');\n        DerogatoryMarks = py.getDouble('DerogatoryMarks');\n        Inquiries = py.getDouble('Inquiries');\n      end;\n    end;\n                                                                    \n endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Loanu32Applicationu32Project_Pythonu32LogisticRegressionu32withu32SASu32Transformu32u40Pipelineu321u41","description":"","source":"\nds2_options scond=none;\n                                                                                                                            \n                                                                                                                                                                                                                                                                                                                                                                     \npackage \"Loanu32Applicationu32Project_Pythonu32LogisticRegressionu32withu32SASu32Transformu32u40Pipelineu321u41\" / overwrite=yes;\ndcl package pymas pm;\ndcl package logger logr('App.MM.Python.DS2');\ndcl varchar(32767) character set utf8 pypgm;\ndcl int resultCode revision;\n\nmethod score(double \"CredLineAge\",\ndouble \"CredLines\",\ndouble \"DebtIncRatio\",\ndouble \"Delinquencies\",\ndouble \"DerogatoryMarks\",\ndouble \"HomeValue\",\ndouble \"Income\",\ndouble \"Inquiries\",\nvarchar(100) \"JobType\",\ndouble \"LoanRequest\",\ndouble \"LoanToValue\",\ndouble \"YearsOnJob\",\nin_out double resultCode,\nin_out double \"P_Default0\",\nin_out double \"P_Default1\",\nin_out varchar(100) \"I_Default\");\n\n   resultCode = revision = 0;\n   if null(pm) then do;\n      pm = _new_ pymas();\n      resultCode = pm.useModule('model_exec_05323eab-f429-4473-9c2d-3f34da56664f', 1);\n      if resultCode then do;\n         resultCode = pm.appendSrcLine('import sys');\n         resultCode = pm.appendSrcLine('sys.path.append(\"/modules/b1317393-c264-41eb-9e5c-986d501f5582/\")');\n         resultCode = pm.appendSrcLine('import settings_b1317393_c264_41eb_9e5c_986d501f5582');\n         resultCode = pm.appendSrcLine('settings_b1317393_c264_41eb_9e5c_986d501f5582.pickle_path = \"/modules/b1317393-c264-41eb-9e5c-986d501f5582/\"');\n         resultCode = pm.appendSrcLine('import _1h3tzjo257gbcd9e09drhli76_fc3f0f67_63c8_4f5f_b455_1235aad84634');\n         resultCode = pm.appendSrcLine('def score_method(Delinquencies, DerogatoryMarks, Inquiries, JobType, CredLineAge, CredLines, DebtIncRatio, LoanRequest, HomeValue, Income, LoanToValue, YearsOnJob):');\n         resultCode = pm.appendSrcLine('    \"Output: P_Default0, P_Default1, I_Default\"');\n         resultCode = pm.appendSrcLine('    return _1h3tzjo257gbcd9e09drhli76_fc3f0f67_63c8_4f5f_b455_1235aad84634.score_method(Delinquencies, DerogatoryMarks, Inquiries, JobType, CredLineAge, CredLines, DebtIncRatio, LoanRequest, HomeValue, Income, LoanToValue, YearsOnJob)');\n\n         revision = pm.publish(pm.getSource(), 'model_exec_05323eab-f429-4473-9c2d-3f34da56664f');\n         if ( revision \u003c 1 ) then do;\n            logr.log( 'e', 'py.publish() failed.');\n            resultCode = -1;\n            return;\n         end;\n      end;\n   end;\n\n   resultCode = pm.useMethod('score_method');\n   if resultCode then do;\n      logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n      return;\n   end;\n   resultCode = pm.setDouble('CredLineAge', CredLineAge);\n   if resultCode then\n      logr.log('E', 'setDouble for CredLineAge failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('CredLines', CredLines);\n   if resultCode then\n      logr.log('E', 'setDouble for CredLines failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DebtIncRatio', DebtIncRatio);\n   if resultCode then\n      logr.log('E', 'setDouble for DebtIncRatio failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('Delinquencies', Delinquencies);\n   if resultCode then\n      logr.log('E', 'setDouble for Delinquencies failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('DerogatoryMarks', DerogatoryMarks);\n   if resultCode then\n      logr.log('E', 'setDouble for DerogatoryMarks failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('HomeValue', HomeValue);\n   if resultCode then\n      logr.log('E', 'setDouble for HomeValue failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('Income', Income);\n   if resultCode then\n      logr.log('E', 'setDouble for Income failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('Inquiries', Inquiries);\n   if resultCode then\n      logr.log('E', 'setDouble for Inquiries failed.  resultCode=$s', resultCode);\n   resultCode = pm.setString('JobType', JobType);\n   if resultCode then\n      logr.log('E', 'setString for JobType failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('LoanRequest', LoanRequest);\n   if resultCode then\n      logr.log('E', 'setDouble for LoanRequest failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('LoanToValue', LoanToValue);\n   if resultCode then\n      logr.log('E', 'setDouble for LoanToValue failed.  resultCode=$s', resultCode);\n   resultCode = pm.setDouble('YearsOnJob', YearsOnJob);\n   if resultCode then\n      logr.log('E', 'setDouble for YearsOnJob failed.  resultCode=$s', resultCode);\n   resultCode = pm.execute();\n   if (resultCode) then\n      logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n   else do;\n      \"P_Default0\" = pm.getDouble('P_Default0');\n      \"P_Default1\" = pm.getDouble('P_Default1');\n      \"I_Default\" = pm.getString('I_Default');\n   end;\nend;\n\n                                                                                                                           \n endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Loanu32Applicationu32Project_highRiskModelScoreRule_1_0","description":"","source":"\n\nds2_options scond=WARNING;\n                                                                                           \n\nDS2_OPTIONS LOGICALEXPR = STANDARD;\nDS2_OPTIONS SCOND = WARNING;\nDS2_OPTIONS MISSING_NOTE;\n\n                                                                                                                                                                                                                                                                                                                                  \n  package \"Loanu32Applicationu32Project_highRiskModelScoreRule_1_0\"  / inline;\n\n      dcl package logger _logger('App.SASDCM');\n      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');\n\n                                                 \n            method setruleFiredBasePosition(integer newBasePosition); end;\n            method setDecisionNodeID(varchar newDecisonNodeID); end;\n            method enableRuleFiredRecording(); end;\n            method disableRuleFiredRecording(); end;\n            method initRuleFireHashes(); end;\n            method getRuleFiredFlagCount() returns integer;  return 0; end;\n            method recordRuleFired(\n              in_out char    ruleFiredFlags,\n              in_out integer rulesFiredForRecordCount,\n              char(36)       this_rule_id);\n            end;\n\n    method execute( in_out double \"P_Default1\",in_out varchar \"Status\");\n\n        \"Status\" = '''undefined''';\n\n;\n         if (\"P_Default1\" \u003c .10) then do;\n         \"Status\" = 'Approved';\n\ngoto \"end_2e4243fd-0ce9-4115-9d8d-525bc1a99eac\";end;\n         else do;\n         \"Status\" = 'Declined';\n\n         end;\n\n         \"end_2e4243fd-0ce9-4115-9d8d-525bc1a99eac\":\n\n      rule_end:                                    \n    end;\n\n                                                                            \n   endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Loanu32Applicationu32Project_loanToValueRule_1_0","description":"","source":"\nds2_options scond=WARNING;\n                                                                                    \n\nDS2_OPTIONS LOGICALEXPR = STANDARD;\nDS2_OPTIONS SCOND = WARNING;\nDS2_OPTIONS MISSING_NOTE;\n\n                                                                                                                                                                                                                                                                                                                    \n  package \"Loanu32Applicationu32Project_loanToValueRule_1_0\"  / inline;\n\n      dcl package logger _logger('App.SASDCM');\n      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');\n\n                                                 \n            method setruleFiredBasePosition(integer newBasePosition); end;\n            method setDecisionNodeID(varchar newDecisonNodeID); end;\n            method enableRuleFiredRecording(); end;\n            method disableRuleFiredRecording(); end;\n            method initRuleFireHashes(); end;\n            method getRuleFiredFlagCount() returns integer;  return 0; end;\n            method recordRuleFired(\n              in_out char    ruleFiredFlags,\n              in_out integer rulesFiredForRecordCount,\n              char(36)       this_rule_id);\n            end;\n\n    method execute( in_out double \"LoanToValue\",in_out varchar \"Status\");\n\n;\n         if (\"LoanToValue\" \u003e= .80) then do;\n         \"Status\" = 'Declined';\n\n         end;\n\n         \"end_0548d939-a185-4cdc-bddc-9cff12cd42b3\":\n\n      rule_end:                                    \n    end;\n\n                                                                     \n   endpackage;","attributes":{"keyValue":""},"language":"DS2"},{"name":"Loanu32Applicationu32Project_lowRiskModelScoreRule_1_0","description":"","source":"\nds2_options scond=WARNING;\n                                                                                          \n\nDS2_OPTIONS LOGICALEXPR = STANDARD;\nDS2_OPTIONS SCOND = WARNING;\nDS2_OPTIONS MISSING_NOTE;\n\n                                                                                                                                                                                                                                                                                                                                \n  package \"Loanu32Applicationu32Project_lowRiskModelScoreRule_1_0\"  / inline;\n\n      dcl package logger _logger('App.SASDCM');\n      dcl package logger logr_variableTrace('App.TableServices.DS2.Runtime.TraceVariables');\n\n                                                 \n            method setruleFiredBasePosition(integer newBasePosition); end;\n            method setDecisionNodeID(varchar newDecisonNodeID); end;\n            method enableRuleFiredRecording(); end;\n            method disableRuleFiredRecording(); end;\n            method initRuleFireHashes(); end;\n            method getRuleFiredFlagCount() returns integer;  return 0; end;\n            method recordRuleFired(\n              in_out char    ruleFiredFlags,\n              in_out integer rulesFiredForRecordCount,\n              char(36)       this_rule_id);\n            end;\n\n    method execute( in_out double \"P_Default1\",in_out varchar \"Status\");\n\n        \"Status\" = '''undefined''';\n\n;\n         if (\"P_Default1\" \u003c 0.3) then do;\n         \"Status\" = 'Approved';\n\ngoto \"end_5d4a4e9f-6ca4-4747-848e-be2624cd2df6\";end;\n         else do;\n         \"Status\" = 'Declined';\n\n         end;\n\n         \"end_5d4a4e9f-6ca4-4747-848e-be2624cd2df6\":\n\n      rule_end:                                    \n    end;\n\n                                                                           \n   endpackage;","attributes":{"keyValue":""},"language":"DS2"}]}