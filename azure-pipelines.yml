# TODO: fill in parameters and match with what is in AzureDevOps parameters

# parameters:
#   - name: 
#     displayName:
#     type:
#     default:

variables:
  server: apgtps2demo.gtp.unx.sas.com
  protocol: https
  azureSubscriptionEndpoint: abpzza-s2demo-aks
  kubernetesServiceEndpoint: abpzza-s2demo-aks
  azureContainerRegistry: ssayjc.azurecr.io
  azureResourceGroup: abpzza
  kubernetesCluster: abpzza-s2demo
  useClusterAdmin: true

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: testing
  displayName: Test Python Model
  jobs:
  - job: testPythonModel
    displayName: Install dependencies and test Python Model
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'

    - script: pip install -r $(System.DefaultWorkingDirectory)/Python_GradientBoost__Pipeline_1_/requirements.txt
      displayName: 'Install dependencies'
    
    - script: pip install pytest
      displayName: 'Install pytest'

    - script: pytest $(System.DefaultWorkingDirectory)/test.py
      displayName: 'Test Python model with pytest'


- stage: publishing
  displayName: Create Model SCR
  condition: succeeded('testing')
  jobs:
  - job: publishModelSCR
    displayName: Create Model Flow SCR
    steps:
    - task: PythonScript@0
      #condition: not(contains(variables['Build.SourceVersionMessage'], 'loanapp_project'))
      inputs:
        scriptSource: 'filepath'
        scriptPath: $(System.DefaultWorkingDirectory)/deploy_model_container.py

- stage: deployment
  displayName: Deploy Model SCR as Pod
  condition: succeeded('publishing')
  jobs:
  - job: deployModelSCR
    displayName: Deploy Model SCR as Pod
    steps:
    - task: Kubernetes@1
      #condition: not(contains(variables['Build.SourceVersionMessage'], 'loanapp_project'))
      displayName: kubectl re-deploy model SCR deployment
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
        azureResourceGroup: $(azureResourceGroup)
        kubernetesCluster: $(kubernetesCluster)
        useClusterAdmin: $(useClusterAdmin)
        command: rollout
        arguments: "restart deployment scr-model-container"
