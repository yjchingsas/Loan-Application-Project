# TODO: fill in parameters and match with what is in AzureDevOps parameters

# parameters:
#   - name: 
#     displayName:
#     type:
#     default:

variables:
  server: viya4.apdemo.sas.com
  protocol: https
  azureSubscriptionEndpoint: apteam-viya4-aks-connection
  azureContainerRegistry: ssayjc.azurecr.io
  azureResourceGroup: ssayjc
  kubernetesCluster: apteam-viya4-aks
  useClusterAdmin: true

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: testing
  displayName: Test Python Model
  jobs:
  - job: testPythonModel
    steps:
    - task: PythonScript@0
      condition: not(contains(variables['Build.SourceVersionMessage'], 'loanapp_project'))
      inputs:
        scriptSource: 'inline'
        script: |
          python -m pip install -r $(System.DefaultWorkingDirectory)/Loan-Application-Project/Loan_Application_Project_7c800b0a-ad66-468a-809c-5421c4846f78/Version 1/Python_GradientBoosting__Python_&_SAS_Model_Pipeline_/requirements.txt
          python $(System.DefaultWorkingDirectory)/test_python_model.py

- stage: publishing
  displayName: Create Decision SCR
  condition: succeeded('testing')
  jobs:
  - job: publishDecisionSCR
    displayName: Create Decision Flow SCR
    steps:
    - task: PythonScript@0
      condition: not(contains(variables['Build.SourceVersionMessage'], 'loanapp_project'))
      inputs:
        scriptSource: 'filepath'
        scriptPath: $(System.DefaultWorkingDirectory)/deploy_decision_container.py

- stage: deployment
  displayName: Deploy Decision SCR as Pod
  condition: succeeded('publishing')
  jobs:
  - job: deployDecisionSCR
    displayName: Deploy Decision SCR as Pod
    steps:
    - task: Kubernetes@1
      condition: not(contains(variables['Build.SourceVersionMessage'], 'loanapp_project'))
      displayName: kubectl re-deploy decision SCR deployment
      inputs:
        connectionType: Azure Resource Manager
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureResourceGroup: $(azureResourceGroup)
        kubernetesCluster: $(kubernetesCluster)
        useClusterAdmin: $(useClusterAdmin)
        command: rollout
        arguments: "restart deployment scr-decision-container"
